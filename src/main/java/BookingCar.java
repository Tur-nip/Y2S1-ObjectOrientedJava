/**
 *
 * @author KhooWennHonn(TP065779)
 */
import java.io.*;
import java.text.DateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;

public class BookingCar extends javax.swing.JFrame {
    String cus_ID;
    ArrayList<Car> CarList = new ArrayList<>(); //arraylist with contents of car object
    int select;
    String avail;
    
    //calls booking car with cusid transferred
    public BookingCar(String cusID) {
        cus_ID = cusID;
        initComponents();
        label_cusID.setText(cus_ID);
    }

    private BookingCar() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    public void readTable(){
        for (int RecNo=0;RecNo<CarList.size();RecNo++){
            Car Temp;
            Temp = CarList.get(RecNo);
            if (Temp.getAvailability().equals("Y")){
                
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_booking = new javax.swing.JTable();
        label_cusID = new javax.swing.JLabel();
        button_book = new javax.swing.JButton();
        button_show = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_carID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        combo_duration = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txt_brand = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_price = new javax.swing.JTextField();
        button_payment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel1.setText("Car Booking");

        jToggleButton1.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        jToggleButton1.setText("Back");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        table_booking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car ID", "Plate Number", "Brand", "Colour", "Price", "Date Registered", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_booking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_bookingMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_booking);

        label_cusID.setText("cus_ID");

        button_book.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_book.setText("Book!");
        button_book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_bookActionPerformed(evt);
            }
        });

        button_show.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_show.setText("Show!");
        button_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_showActionPerformed(evt);
            }
        });

        jLabel2.setText("Car ID");

        txt_carID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_carIDActionPerformed(evt);
            }
        });

        jLabel3.setText("Duration(days)");

        combo_duration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        combo_duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_durationActionPerformed(evt);
            }
        });

        jLabel4.setText("Brand");

        jLabel5.setText("Price(per day)");

        button_payment.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_payment.setText("Proceed to Payment!");
        button_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_paymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(label_cusID, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txt_brand))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_carID, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combo_duration, 0, 132, Short.MAX_VALUE)
                            .addComponent(txt_price)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(button_show)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(button_book)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(button_payment)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1)
                    .addComponent(label_cusID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_carID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_book))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_show)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(combo_duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_payment))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        new CustomerUI(cus_ID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void button_bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_bookActionPerformed
        // check if availability is Y
        DefaultTableModel table = (DefaultTableModel)table_booking.getModel();
        String cmp = "Y";
        if (cmp.equals((String)table.getValueAt(select,6))){
            // setting format for date with dd/MM/yy
            DateFormat formatter = new SimpleDateFormat("dd/MM/yy");
            Calendar cal = Calendar.getInstance();
            String bookingID;
            Booking newBooking = new Booking();
            String CarID = txt_carID.getText();
            String Price = txt_price.getText();
            String Date = formatter.format(cal.getTime());
            String Duration = (String)combo_duration.getSelectedItem();
            newBooking.setCusID(cus_ID);
            newBooking.setCarID(CarID);
            newBooking.setPricePerDay(Price);
            // set booking date as current system date
            newBooking.setBookingDate(Date);
            newBooking.setDuration(Duration);
            // for payment updating
            BookingPayment newPayment = new BookingPayment();
            //get booking id
            try
            {
                File bk = new File("bookingid.txt");
                FileReader fr = new FileReader(bk);
                BufferedReader br = new BufferedReader(fr);
                String input = br.readLine();
                int bookID = Integer.parseInt(input);
                bookID = bookID + 1;
                String CD = String.valueOf(bookID);
                System.out.println(""+CD);
                if (bookID < 10){
                    bookingID = "BOK000"+CD;
                } else if (bookID < 100){
                    bookingID = "BOK00"+CD;
                } else if (bookID <1000){
                    bookingID = "BOK0"+CD;
                } else {
                    bookingID = "BOK"+CD;
                }
                br.close();
                fr.close();
                System.out.println(bookingID);
                newBooking.setBookingID(bookingID);
                newPayment.setBookingID(bookingID);
                FileWriter fw = new FileWriter(bk,false);
                fw.write(CD);
                fw.close();
            }catch(FileNotFoundException e){
            System.out.println("File cusid is not found");
            }catch(Exception ex){
            System.out.println("(A)Other errors found");
            }
            newBooking.appendToFile();
            JOptionPane.showMessageDialog(this,"Booking Success!");
            
            // append to paymentList (from newPayment)
            String paymentID;
            // gen new Payment ID
            try
            {
                File py = new File("paymentid.txt");
                FileReader fr = new FileReader(py);
                BufferedReader br = new BufferedReader(fr);
                String input = br.readLine();
                int payID = Integer.parseInt(input);
                payID = payID + 1;
                String CD = String.valueOf(payID);
                System.out.println(""+CD);
                if (payID < 10){
                    paymentID = "PAY000"+CD;
                } else if (payID < 100){
                    paymentID = "PAY00"+CD;
                } else if (payID <1000){
                    paymentID = "PAY0"+CD;
                } else {
                    paymentID = "PAY"+CD;
                }
                br.close();
                fr.close();
                System.out.println(paymentID);
                newPayment.setPaymentID(paymentID);
                FileWriter fw = new FileWriter(py,false);
                fw.write(CD);
                fw.close();
            }catch(FileNotFoundException e){
            System.out.println("File cusid is not found");
            }catch(Exception ex){
            System.out.println("(A)Other errors found");
            }
            //paymentid;bookingid;cusid;carid;bookingdate;duration;priceperday;totalprice;paymentstatus
            newPayment.setCusID(cus_ID);
            newPayment.setCarID(CarID);
            newPayment.setBookingDate(Date);
            newPayment.setDuration(Duration);
            newPayment.setPricePerDay(Price);
            newPayment.setTotalPrice();
            newPayment.appendToFile();
            
            //update booked car avail to "N"
            File car = new File("carList.txt");
            ArrayList<Car> carList = new ArrayList<>();
            try{
                BufferedReader br = new BufferedReader(new FileReader(car));
                String line = br.readLine();
                while (line != null)
                {
                    String [] split = line.split(";");
                    //carid;platenum;brand;colour;priceperday;date registered;avail
                    if (split[0].equals(CarID)){
                        String cID = CarID;
                        String plateNum = split[1];
                        String brand = split[2];
                        String colour = split[3];
                        String pricePerday = split[4];
                        String regisDate = split[5];
                        String avail = "N"; 
                        carList.add(new Car(cID,plateNum,brand,colour,pricePerday,regisDate,avail));
                    } else {
                        String cID = split[0];
                        String plateNum = split[1];
                        String brand = split[2];
                        String colour = split[3];
                        String pricePerday = split[4];
                        String regisDate = split[5];
                        String avail = split[6]; 
                        carList.add(new Car(cID,plateNum,brand,colour,pricePerday,regisDate,avail));
                    }
                    line = br.readLine();
                }
                br.close();
                // open file as Write mode, using this method as there was bug with temp/rename/remove method
                FileWriter fw = new FileWriter(car,false);
                for (int RecNo = 0; RecNo<carList.size();RecNo++){
                    Car Temp;
                    Temp = carList.get(RecNo);
                    String cID = Temp.getCarID();
                    String plateNum = Temp.getPlateNum();
                    String brand = Temp.getBrand();
                    String colour = Temp.getColour();
                    String pricePerday = Temp.getPrice();
                    String regisDate = Temp.getDate_registered();
                    String avail = Temp.getAvailability();
                    String record = cID+";"+plateNum+";"+brand+";"+colour+";"+pricePerday+";"+regisDate+";"+avail+"\n";
                    fw.write(record);
                }
                fw.close();
            }catch (FileNotFoundException ex){
            System.out.println("File customerList.txt not found!");
            }catch (IOException io){
            System.out.println("IO Exception found!");
            }
        } else{
            JOptionPane.showMessageDialog(this,"Selected Car is not available!",
                    "Unavailable Warning",JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_button_bookActionPerformed

    private void button_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_showActionPerformed
        try
        {
            File car = new File("carList.txt");
            FileReader fr = new FileReader(car);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel table = (DefaultTableModel)table_booking.getModel();
            Object[] dataLines = br.lines().toArray();
            if (table.getRowCount()==0){
                for (int cnt=0;cnt<dataLines.length;cnt++){
                    String line = dataLines[cnt].toString().trim();
                    String[] dataRow = line.split(";");
                    table.addRow(dataRow);
                }
            } else {
                for (int cnt=0;cnt<dataLines.length;cnt++){
                    String line = dataLines[cnt].toString().trim();
                    String[] dataRow = line.split(";");
                    table.addRow(dataRow);
                }
            }
            br.close();
        }catch(FileNotFoundException ex){
        
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Refresh failed!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_button_showActionPerformed

    private void table_bookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_bookingMouseClicked
        //get the selected row through mouse click
        select = table_booking.getSelectedRow();
        DefaultTableModel table = (DefaultTableModel)table_booking.getModel();
        avail = (String)table.getValueAt(select, 6);
        txt_carID.setText((String)table.getValueAt(select,0));
        txt_brand.setText((String)table.getValueAt(select,2));
        txt_price.setText((String)table.getValueAt(select, 4));
        txt_carID.setEditable(false);
        txt_brand.setEditable(false);
        txt_price.setEditable(false);
        System.out.println(avail);
    }//GEN-LAST:event_table_bookingMouseClicked

    private void txt_carIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_carIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_carIDActionPerformed

    private void combo_durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_durationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_durationActionPerformed

    private void button_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_paymentActionPerformed
        new MakePayment(cus_ID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_paymentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_book;
    private javax.swing.JButton button_payment;
    private javax.swing.JButton button_show;
    private javax.swing.JComboBox<String> combo_duration;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel label_cusID;
    private javax.swing.JTable table_booking;
    private javax.swing.JTextField txt_brand;
    private javax.swing.JTextField txt_carID;
    private javax.swing.JTextField txt_price;
    // End of variables declaration//GEN-END:variables
}
