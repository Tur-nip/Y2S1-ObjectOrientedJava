import java.io.*;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author KhooWennHonn(TP065779)
 */
public class BookingHistory extends javax.swing.JFrame {
    String cus_ID;
    int select;
    String carID_cancel;
    public BookingHistory(String cusID) {
        cus_ID = cusID;
        initComponents();
        label_cusID.setText(cus_ID);
        txt_carID.setEditable(false);
        txt_date.setEditable(false);
    }

    private BookingHistory() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        button_back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_booking = new javax.swing.JTable();
        label_cusID = new javax.swing.JLabel();
        button_show = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_carID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_date = new javax.swing.JTextField();
        button_cancel = new javax.swing.JButton();
        button_print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel1.setText("Booking History");

        button_back.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_back.setText("Back!");
        button_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_backActionPerformed(evt);
            }
        });

        table_booking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment ID", "Booking ID", "Customer ID", "Car ID", "Booking Date", "Duration (days)", "Price (perDay)", "Total Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_booking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_bookingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_booking);

        label_cusID.setText("cus_ID");

        button_show.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_show.setText("Show");
        button_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_showActionPerformed(evt);
            }
        });

        jLabel2.setText("Car ID");

        jLabel3.setText("Booking Date");

        txt_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dateActionPerformed(evt);
            }
        });

        button_cancel.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_cancel.setText("Cancel Booking");
        button_cancel.setEnabled(false);
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        button_print.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_print.setText("Print Report");
        button_print.setEnabled(false);
        button_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button_show)
                        .addGap(118, 118, 118)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(txt_carID, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_cancel)
                            .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(145, 145, 145)
                .addComponent(button_print, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(label_cusID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(button_back)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_back)
                    .addComponent(label_cusID))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_carID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(button_print)
                            .addComponent(button_show))
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(button_cancel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_backActionPerformed
        new CustomerUI(cus_ID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_backActionPerformed

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        File pay = new File("paymentList.txt");
        ArrayList<BookingPayment> payList = new ArrayList<>();
        // removing listing from paymentList in ArrayList
        try{
            BufferedReader br = new BufferedReader(new FileReader(pay));
            String line = br.readLine();
            while (line != null)
            {
                String [] split = line.split(";");
                //carid;platenum;brand;colour;priceperday;date registered;avail
                if (split[3].equals(carID_cancel)){
                    System.out.println("Deleted!");
                } else {
                    String pID = split[0];
                    String bookingID = split[1];
                    String customerID = split[2];
                    String carid = split[3];
                    String bookingdate = split[4];
                    String duration = split[5];
                    String pricePerday = split[6]; 
                    String totalprice = split[7];
                    String payStatus = split[8];
                    payList.add(new BookingPayment(pID,bookingID,customerID,carid,bookingdate,
                        duration,pricePerday,totalprice,payStatus));
                }
                    line = br.readLine();
                }
            br.close();
            FileWriter fw = new FileWriter(pay,false);
            for (int RecNo = 0; RecNo<payList.size();RecNo++){
                BookingPayment Temp;
                Temp = payList.get(RecNo);
                String pID = Temp.getPaymentID();
                String bookingID = Temp.getBookingID();
                String customerID = Temp.getCusID();
                String carID = Temp.getCarID();
                String bookingdate = Temp.getBookingDate();
                String duration = Temp.getDuration();
                String pricePerday = Temp.getPricePerDay();
                String totalprice = Temp.getTotalPrice();
                String payStatus = Temp.getPaymentStatus();
                String record = pID+";"+bookingID+";"+customerID+";"+carID+";"+bookingdate+";"+
                            duration+";"+pricePerday+";"+totalprice+";"+payStatus+"\n";
                fw.write(record);
                }
            fw.close();
        }catch (FileNotFoundException ex){
            System.out.println("File customerList.txt not found!");
        }catch (IOException io){
            System.out.println("IO Exception found!");
        }
        // returning availability of the car in carList back to "Y"
        File car = new File("carList.txt");
        ArrayList<Car> carList = new ArrayList<>();
        try{
            BufferedReader br = new BufferedReader(new FileReader(car));
            String line = br.readLine();
            while (line != null)
            {
                String [] split = line.split(";");
                //carid;platenum;brand;colour;priceperday;date registered;avail
                if (split[0].equals(carID_cancel)){
                    String cID = carID_cancel;
                    String plateNum = split[1];
                    String brand = split[2];
                    String colour = split[3];
                    String pricePerday = split[4];
                    String regisDate = split[5];
                    String avail = "Y"; 
                    carList.add(new Car(cID,plateNum,brand,colour,pricePerday,regisDate,avail));
                } else {
                    String cID = split[0];
                    String plateNum = split[1];
                    String brand = split[2];
                    String colour = split[3];
                    String pricePerday = split[4];
                    String regisDate = split[5];
                    String avail = split[6]; 
                    carList.add(new Car(cID,plateNum,brand,colour,pricePerday,regisDate,avail));
                }
                line = br.readLine();
                }
            br.close();
            FileWriter fw = new FileWriter(car,false);
            for (int RecNo = 0; RecNo<carList.size();RecNo++){
                Car Temp;
                Temp = carList.get(RecNo);
                String cID = Temp.getCarID();
                String plateNum = Temp.getPlateNum();
                String brand = Temp.getBrand();
                String colour = Temp.getColour();
                String pricePerday = Temp.getPrice();
                String regisDate = Temp.getDate_registered();
                String avail = Temp.getAvailability();
                String record = cID+";"+plateNum+";"+brand+";"+colour+";"+pricePerday+";"+regisDate+";"+avail+"\n";
                fw.write(record);
            }
            fw.close();
        }catch (FileNotFoundException ex){
            System.out.println("File customerList.txt not found!");
        }catch (IOException io){
            System.out.println("IO Exception found!");
        }
        JOptionPane.showMessageDialog(this,"Cancel Success!");
    }//GEN-LAST:event_button_cancelActionPerformed

    private void txt_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dateActionPerformed

    private void button_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_showActionPerformed
        try
        {
            File pay = new File("paymentList.txt");
            FileReader fr = new FileReader(pay);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel table = (DefaultTableModel)table_booking.getModel();
            Object[] dataLines = br.lines().toArray();
            if (table.getRowCount()==0){
                for (int cnt=0;cnt<dataLines.length;cnt++){
                    String line = dataLines[cnt].toString().trim();
                    String[] dataRow = line.split(";");
                    if (dataRow[2].equals(cus_ID)){
                        table.addRow(dataRow);
                    }
                }
            } else {
                for (int cnt=0;cnt<dataLines.length;cnt++){
                    String line = dataLines[cnt].toString().trim();
                    String[] dataRow = line.split(";");
                    if (dataRow[2].equals(cus_ID)){
                        table.addRow(dataRow);
                    }
                }
            br.close();
            }
        }catch(FileNotFoundException ex){
        
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Refresh failed!");
            e.printStackTrace();
        }
        button_print.setEnabled(true);
    }//GEN-LAST:event_button_showActionPerformed

    private void table_bookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_bookingMouseClicked
        //get the selected row through mouse click
        select = table_booking.getSelectedRow();
        DefaultTableModel table = (DefaultTableModel)table_booking.getModel();
        carID_cancel = (String)table.getValueAt(select, 3);
        txt_carID.setText(carID_cancel);
        txt_date.setText((String)table.getValueAt(select,4));
        button_cancel.setEnabled(true);
    }//GEN-LAST:event_table_bookingMouseClicked

    private void button_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_printActionPerformed
        try{
            DateFormat formatter = new SimpleDateFormat("dd/MM/yy");
            Calendar cal = Calendar.getInstance();
            String Date = formatter.format(cal.getTime());
            MessageFormat header = new MessageFormat("Customer Booking History Report: "+cus_ID);
            MessageFormat footer = new MessageFormat("K&K Car Rental System, Generated on: "+Date);
            table_booking.print(JTable.PrintMode.FIT_WIDTH,header,footer);
        } catch (java.awt.print.PrinterException p){
            System.out.println("Printer Exception found");
        }
    }//GEN-LAST:event_button_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_back;
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_print;
    private javax.swing.JButton button_show;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_cusID;
    private javax.swing.JTable table_booking;
    private javax.swing.JTextField txt_carID;
    private javax.swing.JTextField txt_date;
    // End of variables declaration//GEN-END:variables
}
