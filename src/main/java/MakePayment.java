import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KhooWennHonn(TP065779)
 */

public class MakePayment extends javax.swing.JFrame {
    String cus_ID;
    int select;
    String show = "PENDING";
    String payingID;
    
    public MakePayment(String cusID) {
        cus_ID = cusID;
        initComponents();
        label_cusID.setText(cus_ID);
        txt_carID.setEditable(false);
        txt_totalPrice.setEditable(false);
    }

    private MakePayment() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        label_cusID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_payment = new javax.swing.JTable();
        button_pay = new javax.swing.JButton();
        combo_paymentChannel = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_carID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_totalPrice = new javax.swing.JTextField();
        button_show = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        button_back.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_back.setText("Back");
        button_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel1.setText("Payment page");

        label_cusID.setText("cus_id");

        table_payment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment ID", "Booking ID", "Customer ID", "Car ID", "Booking Date", "Duration (Days)", "Price (perDay)", "Total Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_payment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_paymentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_payment);

        button_pay.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_pay.setText("Pay now!");
        button_pay.setEnabled(false);
        button_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_payActionPerformed(evt);
            }
        });

        combo_paymentChannel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TnG", "Credit/Debit Card", "GrabPay", "Direct Transfer", "Bank-In" }));

        jLabel2.setText("Payment Channel");

        jLabel3.setText("CarID");

        jLabel4.setText("Total Price");

        txt_totalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalPriceActionPerformed(evt);
            }
        });

        button_show.setFont(new java.awt.Font("Book Antiqua", 1, 14)); // NOI18N
        button_show.setText("Show!");
        button_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_showActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(label_cusID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177)
                .addComponent(button_back)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_carID, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(combo_paymentChannel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_show, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_pay)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_totalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_cusID)
                    .addComponent(button_back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_carID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txt_totalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_paymentChannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_show)
                    .addComponent(button_pay))
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_backActionPerformed
        new CustomerUI(cus_ID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_backActionPerformed

    private void button_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_payActionPerformed
        //update payment status to "PAID"
            File pay = new File("paymentList.txt");
            ArrayList<BookingPayment> payList = new ArrayList<>();
            try{
                BufferedReader br = new BufferedReader(new FileReader(pay));
                String line = br.readLine();
                while (line != null)
                {
                    String [] split = line.split(";");
                    //carid;platenum;brand;colour;priceperday;date registered;avail
                    if (split[0].equals(payingID)){
                        String pID = payingID;
                        String bookingID = split[1];
                        String customerID = split[2];
                        String carid = split[3];
                        String bookingdate = split[4];
                        String duration = split[5];
                        String pricePerday = split[6]; 
                        String totalprice = split[7];
                        String payStatus = "PAID";
                        payList.add(new BookingPayment(pID,bookingID,customerID,carid,bookingdate,
                        duration,pricePerday,totalprice,payStatus));
                    } else {
                        String pID = split[0];
                        String bookingID = split[1];
                        String customerID = split[2];
                        String carid = split[3];
                        String bookingdate = split[4];
                        String duration = split[5];
                        String pricePerday = split[6]; 
                        String totalprice = split[7];
                        String payStatus = split[8];
                        payList.add(new BookingPayment(pID,bookingID,customerID,carid,bookingdate,
                        duration,pricePerday,totalprice,payStatus));
                    }
                    line = br.readLine();
                }
                br.close();
                FileWriter fw = new FileWriter(pay,false);
                for (int RecNo = 0; RecNo<payList.size();RecNo++){
                    BookingPayment Temp;
                    Temp = payList.get(RecNo);
                    String pID = Temp.getPaymentID();
                    String bookingID = Temp.getBookingID();
                    String customerID = Temp.getCusID();
                    String carID = Temp.getCarID();
                    String bookingdate = Temp.getBookingDate();
                    String duration = Temp.getDuration();
                    String pricePerday = Temp.getPricePerDay();
                    String totalprice = Temp.getTotalPrice();
                    String payStatus = Temp.getPaymentStatus();
                    String record = pID+";"+bookingID+";"+customerID+";"+carID+";"+bookingdate+";"+
                            duration+";"+pricePerday+";"+totalprice+";"+payStatus+"\n";
                    fw.write(record);
                }
                fw.close();
            }catch (FileNotFoundException ex){
            System.out.println("File customerList.txt not found!");
            }catch (IOException io){
            System.out.println("IO Exception found!");
            }
            JOptionPane.showMessageDialog(this,"Payment Success!");
            // prompt for receipt or not (changed to booking history report)
            /**int input = JOptionPane.showConfirmDialog(this, "Print receipt?",
                    "Payment Success!",JOptionPane.YES_NO_OPTION);
            if (input == JOptionPane.YES_OPTION){
                try{
                    MessageFormat header = new MessageFormat("Payment Receipt Slip");
                    MessageFormat footer = new MessageFormat("K&K Car Rental System");
                    table_payment.print(JTable.PrintMode.FIT_WIDTH,header,footer);
                } catch (java.awt.print.PrinterException p){
                    System.out.println("Printer Exception found");
                }
            } else if (input == JOptionPane.NO_OPTION) {
                new CustomerUI(cus_ID).setVisible(true);
                this.dispose();
            }**/
    }//GEN-LAST:event_button_payActionPerformed

    private void txt_totalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalPriceActionPerformed

    private void button_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_showActionPerformed
        try
        {
            File pay = new File("paymentList.txt");
            FileReader fr = new FileReader(pay);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel table = (DefaultTableModel)table_payment.getModel();
            Object[] dataLines = br.lines().toArray();
            if (table.getRowCount()==0){
                for (int cnt=0;cnt<dataLines.length;cnt++){
                    String line = dataLines[cnt].toString().trim();
                    String[] dataRow = line.split(";");
                    if (dataRow[2].equals(cus_ID)&&dataRow[8].equals(show)){
                        table.addRow(dataRow);
                    }
                }
            } else {
                for (int cnt=0;cnt<dataLines.length;cnt++){
                    String line = dataLines[cnt].toString().trim();
                    String[] dataRow = line.split(";");
                    if (dataRow[2].equals(cus_ID)&&dataRow[8].equals(show)){
                        table.addRow(dataRow);
                    }
                }
            br.close();
            }
        }catch(FileNotFoundException ex){
        
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Refresh failed!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_button_showActionPerformed

    private void table_paymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_paymentMouseClicked
        //get the selected row through mouse click
        select = table_payment.getSelectedRow();
        DefaultTableModel table = (DefaultTableModel)table_payment.getModel();
        txt_carID.setText((String)table.getValueAt(select,3));
        txt_totalPrice.setText((String)table.getValueAt(select,7));
        payingID = (String)table.getValueAt(select, 0);
        button_pay.setEnabled(true);
    }//GEN-LAST:event_table_paymentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakePayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_back;
    private javax.swing.JButton button_pay;
    private javax.swing.JButton button_show;
    private javax.swing.JComboBox<String> combo_paymentChannel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_cusID;
    private javax.swing.JTable table_payment;
    private javax.swing.JTextField txt_carID;
    private javax.swing.JTextField txt_totalPrice;
    // End of variables declaration//GEN-END:variables
}
